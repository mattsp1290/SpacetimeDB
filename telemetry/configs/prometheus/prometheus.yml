global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'spacetimedb-monitor'
    environment: 'development'

# Alertmanager configuration (optional)
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - 'alertmanager:9093'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8889']
        labels:
          service: 'otel-collector'

  # SpacetimeDB metrics (direct scraping as backup)
  - job_name: 'spacetimedb'
    static_configs:
      - targets: ['spacetimedb:9000']
        labels:
          service: 'spacetimedb'
          component: 'server'
    scrape_interval: 10s
    metrics_path: '/metrics'

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'grafana'

  # Jaeger metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
        labels:
          service: 'jaeger'
    metrics_path: '/metrics'

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "http://remote-prometheus:9090/api/v1/write"
