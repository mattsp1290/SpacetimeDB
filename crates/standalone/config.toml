# [certificate-authority]
# jwt-priv-key-path = "~/.config/spacetime/id_ecdsas"
# jwt-pub-key-path = "~/.config/spacetime/id_ecdsa.pub"

[logs]
# The default level filter for logging
# level = "ERROR"

# directives for logging, see link for syntax:
# https://docs.rs/tracing-subscriber/latest/tracing_subscriber/struct.EnvFilter.html#directives
directives = [
    "spacetimedb=debug",
    "spacetimedb_client_api=debug",
    "spacetimedb_lib=debug",
    "spacetimedb_standalone=debug",
    "spacetimedb_commitlog=info",
    "spacetimedb_durability=info",
    "axum::rejection=trace",
]

# [telemetry]
# OpenTelemetry telemetry configuration
# Uncomment the sections below to enable telemetry

# [telemetry.tracing]
# enabled = true
# service-name = "spacetimedb-standalone"
# log-level = "info"
# max-events-per-span = 128
# max-attributes-per-span = 128
# export-timeout-seconds = 30

# # OTLP exporter configuration (recommended)
# [telemetry.tracing.exporter]
# type = "otlp"
# endpoint = "http://localhost:4317"
# # Optional authentication headers
# # headers = { "authorization" = "Bearer your-token" }

# # Sampling configuration
# [telemetry.tracing.sampling]
# strategy = "trace_id_ratio"  # "always_on", "always_off", "trace_id_ratio"
# rate = 0.1  # Sample 10% of traces

# [telemetry.metrics]
# enabled = false
# export-interval-seconds = 60
# export-timeout-seconds = 30

# # Prometheus metrics exporter
# [telemetry.metrics.exporter]
# type = "prometheus"
# endpoint = "/metrics"

# vim: set nowritebackup: << otherwise triggers cargo-watch
